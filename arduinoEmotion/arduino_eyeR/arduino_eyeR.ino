#include "LedControl.h"
LedControl lcR = LedControl(16,12,14,4);

unsigned char normalA[][8] = {\
  {0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00},\
};
unsigned char normalB[][8] = {\
  {0x7e,0xff,0xe7,0xc3,0xc3,0xe7,0xff,0x7e},\
};
unsigned char normalC[][8] = {\
  {0x00,0x00,0x01,0x01,0x01,0x01,0x00,0x00},\
};


unsigned char happyRA[][8] = {\
  {0x00,0x00,0x00,0x80,0xc0,0xe0,0x60,0x00},\ 
  {0x00,0x00,0x00,0x80,0xc0,0xe0,0x60,0x00},\ 
  {0x00,0x00,0x80,0xc0,0xe0,0x60,0x00,0x00},\ 
  {0x00,0x00,0x80,0xc0,0xe0,0x60,0x00,0x00},\    
};
unsigned char happyRB[][8] = {\
  {0x00,0x00,0xff,0xff,0x81,0x00,0x00,0x00},\ 
  {0x00,0x00,0xff,0xff,0x81,0x00,0x00,0x00},\ 
  {0x00,0xff,0xff,0x81,0x00,0x00,0x00,0x00},\ 
  {0x00,0xff,0xff,0x81,0x00,0x00,0x00,0x00},\ 
};
unsigned char happyRC[][8] = {\
  {0x00,0x00,0x00,0x01,0x03,0x07,0x06,0x00},\ 
  {0x00,0x00,0x00,0x01,0x03,0x07,0x06,0x00},\ 
  {0x00,0x00,0x01,0x03,0x07,0x06,0x00,0x00},\ 
  {0x00,0x00,0x01,0x03,0x07,0x06,0x00,0x00},\  
};


unsigned char sadRA[][8] = {\
  {0x00,0x03,0x07,0x0e,0x00,0x00,0x00,0x00},\ 
};
unsigned char sadRB[][8] = {\
  {0x00,0xff,0xff,0x08,0x00,0x00,0x00,0x00},\ 
  {0x00,0xff,0xff,0x1c,0x08,0x00,0x00,0x00},\ 
  {0x00,0xff,0xff,0x1c,0x1c,0x08,0x00,0x00},\ 
  {0x00,0xff,0xff,0x08,0x1c,0x1c,0x08,0x00},\ 
  {0x00,0xff,0xff,0x00,0x08,0x1c,0x1c,0x08},\
  {0x00,0xff,0xff,0x00,0x00,0x08,0x1c,0x1c},\
  {0x00,0xff,0xff,0x00,0x00,0x00,0x08,0x1c},\
  {0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x08},\
};
unsigned char sadRC[][8] = {\
  {0x70,0xe0,0xc0,0x00,0x00,0x00,0x00,0x00},\
};


unsigned char angryRA[][8] = {
    {0x0f,0x0c,0x0c,0x06,0x03,0x01,0x00,0x00},
    {0x07,0x06,0x06,0x03,0x01,0x00,0x00,0x00}
};
unsigned char angryRB[][8] = {
    {0xfc,0x1f,0x3f,0x3f,0x1f,0x8e,0xe0,0x7f},
    {0xfe,0x0f,0x1f,0x1f,0x8f,0xc7,0x60,0x3f}
};
unsigned char angryRC[][8] = {
    {0x00,0x00,0xc0,0x60,0x30,0x30,0x60,0xc0},
    {0x00,0x80,0xe0,0xb0,0x98,0x18,0x30,0xe0}
};


int i;
 
void clean(){
  for(int i = 0; i < 3; i++)
    lcR.clearDisplay(i);
}


void setup() {
  Serial.begin(115200);

  for(int i=0; i<3; i++){
    lcR.shutdown(i,false);
    lcR.setIntensity(i,5);
    lcR.clearDisplay(i);
  }

}

int idx = 0;
String input = "";

void loop(){
  if (Serial.available()>0) {
    input = Serial.readStringUntil('\n');
  }

  if (input=="sleep"){
    clean();
  }

  if (input=="normal-4"){
    for (i = 0; i<8; i++)
    {
      lcR.setRow(2,i,normalA[0][i]);
      lcR.setRow(1,i,normalB[0][i]);
      lcR.setRow(0,i,normalC[0][i]);
    }
  }

  else if (input=="happy-3"){
    for (i = 0; i<8; i++)
    {
      lcR.setRow(2,i,happyRA[idx][i]);
      lcR.setRow(1,i,happyRB[idx][i]);
      lcR.setRow(0,i,happyRC[idx][i]);
    }
    idx = (idx+1) % (sizeof(happyRA)/8);
  }

  else if (input=="sad-4"){
    for (i = 0; i<8; i++)
    {
      lcR.setRow(0,i,sadRA[0][i]);
      lcR.setRow(1,i,sadRB[idx][i]);
      lcR.setRow(2,i,sadRC[0][i]);
    }
    idx = (idx+1) % (sizeof(sadRB)/8);
  }

  else if (input=="angry-4"){
    for (i = 0; i<8; i++)
    {
      lcR.setRow(0,i,angryRA[idx][i]);
      lcR.setRow(1,i,angryRB[idx][i]);
      lcR.setRow(2,i,angryRC[idx][i]);
    }
    idx = (idx+1) % (sizeof(angryRA)/8);
  }

  delay(100);

}
